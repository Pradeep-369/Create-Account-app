{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","fields","errors","this","formIsValid","match","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","setState","e","preventDefault","handleValidation","alert","field","target","value","className","action","onSubmit","contactSubmit","bind","htmlFor","type","name","id","placeholder","creactref","onChange","handleChange","createrefs","href","rel","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b2919d4.chunk.js","sourcesContent":["// import React, { Component } from \"react\";\nimport React from \"react\";\nimport \"./App.css\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fields: {},\n      errors: {},\n    };\n  }\n\n  handleValidation() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n\n    //Name\n    if (!fields[\"name\"]) {\n      formIsValid = false;\n      errors[\"name\"] = \"Cannot be empty\";\n    }\n\n    if (typeof fields[\"name\"] !== \"undefined\") {\n      if (!fields[\"name\"].match(/^[a-zA-Z]+$/)) {\n        formIsValid = false;\n        errors[\"name\"] = \"Name Only  be  letters\";\n      }\n    }\n\n    if (!fields[\"userName\"]) {\n      formIsValid = false;\n      errors[\"userName\"] = \"User Name Cannot be empty\";\n    }\n\n    //Email\n    if (!fields[\"email\"]) {\n      formIsValid = false;\n      errors[\"email\"] = \"Cannot be empty\";\n    }\n\n    if (typeof fields[\"email\"] !== \"undefined\") {\n      let lastAtPos = fields[\"email\"].lastIndexOf(\"@\");\n      let lastDotPos = fields[\"email\"].lastIndexOf(\".\");\n\n      if (\n        !(\n          lastAtPos < lastDotPos &&\n          lastAtPos > 0 &&\n          fields[\"email\"].indexOf(\"@@\") === -1 &&\n          lastDotPos > 2 &&\n          fields[\"email\"].length - lastDotPos > 2\n        )\n      ) {\n        formIsValid = false;\n        errors[\"email\"] = \"Email is not valid\";\n      }\n    }\n    // Password\n\n    if (!fields[\"password\"]) {\n      formIsValid = false;\n      errors[\"password\"] = \"Password cannot be empty\";\n    }\n    if (fields[\"password\"] < 8) {\n      formIsValid = false;\n      errors[\"password\"] =\n        \"Password Length Must be  less than are equal to 8 characters \";\n    }\n\n    if (fields[\"password\"] !== fields[\"passwordCopy\"]) {\n      formIsValid = false;\n      errors[\"passwordCopy\"] = \"Password Doesn't Match \";\n    }\n\n    // Checkbox\n\n    this.setState({ errors: errors });\n    return formIsValid;\n  }\n\n  contactSubmit(e) {\n    e.preventDefault();\n    if (this.handleValidation()) {\n      alert(\"Form submitted :) \");\n    } else {\n      alert(\"You Have Some Errors in The input\");\n    }\n  }\n\n  handleChange(field, e) {\n    let fields = this.state.fields;\n    fields[field] = e.target.value;\n    this.setState({ fields });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"hero-image\"></div>\n        <div className=\"form-container\">\n          <form\n            action=\"#\"\n            className=\"form__container2\"\n            onSubmit={this.contactSubmit.bind(this)}\n          >\n            <h2 className=\"form-title\">Create Account</h2>\n            <div>\n              <label htmlFor=\"fullName\">\n                <small>Full Name</small>\n              </label>\n              <br />\n              <input\n                type=\"text\"\n                name=\"Full Name \"\n                id=\"fullName\"\n                placeholder=\"Name..\"\n                creactref={\"name\"}\n                onChange={this.handleChange.bind(this, \"name\")}\n                value={this.state.fields[\"name\"]}\n              />\n              <small className=\"error\">{this.state.errors[\"name\"]}</small>\n            </div>\n            <div>\n              <label htmlFor=\"email\">\n                <small>Email</small>\n              </label>\n              <br />\n              <input\n                createrefs=\"email\"\n                type=\"email\"\n                name=\"User email\"\n                id=\"email\"\n                placeholder=\"Email address...\"\n                onChange={this.handleChange.bind(this, \"email\")}\n                value={this.state.fields[\"email\"]}\n              />\n              <small className=\"error\">{this.state.errors[\"email\"]}</small>\n            </div>\n            <div>\n              <label htmlFor=\"userName\">\n                <small>User Name</small>\n              </label>\n              <br />\n              <input\n                createrefs=\"name\"\n                type=\"text\"\n                name=\"User Name \"\n                id=\"userName\"\n                placeholder=\"Username...\"\n                onChange={this.handleChange.bind(this, \"userName\")}\n                value={this.state.fields[\"userName\"]}\n              />\n              <small className=\"error\">{this.state.errors[\"userName\"]}</small>\n            </div>\n            <div>\n              <label htmlFor=\"password\">\n                <small>User Password</small>\n              </label>\n              <br />\n              <input\n                createrefs=\"password\"\n                type=\"password\"\n                name=\"User Password \"\n                id=\"password\"\n                placeholder=\"****************\"\n                onChange={this.handleChange.bind(this, \"password\")}\n                value={this.state.fields[\"password\"]}\n              />\n              <small className=\"error\">{this.state.errors[\"password\"]}</small>\n            </div>\n            <div>\n              <label htmlFor=\"Repeat-password\">\n                <small>Repeat Password</small>\n              </label>\n              <br />\n              <input\n                createrefs=\"passwordCopy\"\n                type=\"password\"\n                name=\"Repeat Password \"\n                id=\"Repeat-password\"\n                placeholder=\"****************\"\n                onChange={this.handleChange.bind(this, \"passwordCopy\")}\n                value={this.state.fields[\"passwordCopy\"]}\n              />\n              <small className=\"error\">\n                {this.state.errors[\"passwordCopy\"]}\n              </small>\n            </div>\n            <div>\n              <input\n                createrefs=\"check\"\n                type=\"checkbox\"\n                name=\"Terms&Conditions\"\n                id=\"terms\"\n              />\n              <label htmlFor=\"terms\">\n                <small> I agree to the Terms of User </small>\n              </label>{\" \"}\n              <br />\n              <small id=\"agreement-error\">\n                {\" \"}\n                Make Sure Before Submitting form You Agree With The Terms and\n                Conditions\n              </small>\n            </div>\n            <div className=\"btn__container\">\n              <input type=\"submit\" value=\"Sign up\" className=\"submit-btn\" />\n              <button className=\"sign_in_btn\">\n                <a\n                  href=\"https://unsplash.com/s/photos/login\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Sign In\n                  <i className=\"fa fa-arrow-right\" aria-hidden=\"true\"></i>\n                </a>\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}